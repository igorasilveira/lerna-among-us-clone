{"ast":null,"code":"const checkWithingBoundaries = ({\n  maxX,\n  maxY,\n  minX,\n  minY,\n  point\n}) => {\n  return minX <= point.x && point.x <= maxX && minY <= point.y && point.y <= maxY;\n};\n\nexport { checkWithingBoundaries };","map":{"version":3,"sources":["/Users/igorsilveira/Documents/Projects/lerna-among-us-clone/packages/app/helpers/PointHelper.ts"],"names":["checkWithingBoundaries","maxX","maxY","minX","minY","point","x","y"],"mappings":"AAEA,MAAMA,sBAAsB,GAAG,CAC3B;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA;AAAzB,CAD2B,KAEjB;AACZ,SAAQF,IAAI,IAAIE,KAAK,CAACC,CAAd,IAAmBD,KAAK,CAACC,CAAN,IAAWL,IAA/B,IACJG,IAAI,IAAIC,KAAK,CAACE,CAAd,IAAmBF,KAAK,CAACE,CAAN,IAAWL,IADjC;AAED,CALD;;AAOA,SACIF,sBADJ","sourcesContent":["import {ICheckWithingBoundariesProps} from \"../definitions/helpers\";\n\nconst checkWithingBoundaries = (\n    {maxX, maxY, minX, minY, point}: ICheckWithingBoundariesProps,\n): boolean => {\n  return (minX <= point.x && point.x <= maxX) &&\n    (minY <= point.y && point.y <= maxY);\n};\n\nexport {\n    checkWithingBoundaries,\n};\n"]},"metadata":{},"sourceType":"module"}